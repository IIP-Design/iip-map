const exportDataBtn=document.getElementById("iip-map-export");function getMapProjectData(){let e={action:"export_data_ajax",map_id:iip_map_params.map_data_id,security:iip_map_params.export_nonce};jQuery.ajax({type:"post",url:iip_map_params.ajax_url,data:e,success:function(e){console.log("Successfully exported data!");var t="data:application/csv,"+e;window.location.href=t},error:function(e,t,a){console.log("Failed due to "+t+"! \n"+a)}})}exportDataBtn.addEventListener("click",getMapProjectData);let googleKey=iip_map_params.google_api_key,mapId=iip_map_params.map_data_id,venueField=iip_map_params.venue_field,addressField=iip_map_params.address_field,cityField=iip_map_params.city_field,regionField=iip_map_params.region_field,countryField=iip_map_params.country_field,hostField=iip_map_params.host_field,eventField=iip_map_params.event_field,descField=iip_map_params.desc_field,dateField=iip_map_params.date_field,timeField=iip_map_params.time_field,durationField=iip_map_params.duration_field,topicField=iip_map_params.topic_field,contactField=iip_map_params.contact_field,onBatch=0,dataArray=[],responsesArray=[];document.addEventListener("DOMContentLoaded",function(){const e=document.createElement("script");e.type="text/javascript",e.src="https://maps.googleapis.com/maps/api/js?key="+googleKey,document.getElementsByTagName("head")[0].appendChild(e)});const geocodeBtn=document.getElementById("iip-map-geocode");function getScreendoorData(){let e=screendoorEndpoint+"/responses?per_page=100&status="+iip_map_params.trigger_status+screendoorKey,t=new XMLHttpRequest;t.open("GET",e),t.responseType="json",t.send(),t.onload=function(){let e=t.response;statusDisplay("Call to Screendoor API: "+t.statusText),geocodeAddress(e)}}function geocodeAddress(e){let t=e.length;statusDisplay("Returned <b>"+t+" results</b> with status "+iip_map_params.trigger_status);let a=Promise.resolve();let n=Math.floor(t/20),s=t%20;e.forEach(function(e){a=a.then(function(){let t=e.responses[addressField],a=e.responses[cityField],o=e.responses[regionField],i=e.responses[countryField],r=e.responses[eventField],p=e.id,d=t+", "+a+", "+i,l=a+", "+i,u={};const c=new google.maps.Geocoder;return c.geocode({address:d},function(d,m){if(statusDisplay("Google geocoding status for < "+r+" > : "+m),"OK"===m){let l=d[0].geometry.location.lat(),c=d[0].geometry.location.lng();u={map_id:mapId,venue_name:e.responses[venueField],venue_address:t,venue_city:a,venue_region:o,venue_country:i,lat:l,lng:c,host_name:e.responses[hostField],event_name:r,event_desc:e.responses[descField],event_date:e.responses[dateField],event_time:e.responses[timeField],event_duration:e.responses[durationField],event_topic:e.responses[topicField],contact:e.responses[contactField]},statusDisplay("Queuing results..."),batchResponses(u,p,20,n,s)}else"ZERO_RESULTS"===m?c.geocode({address:l},function(d,l){if(statusDisplay("Address not valid. Attempting to geocode fallback address for < "+r+" >"),"OK"===l){let l=d[0].geometry.location.lat(),c=d[0].geometry.location.lng();u={map_id:mapId,venue_name:e.responses[venueField],venue_address:t,venue_city:a,venue_region:o,venue_country:i,lat:l,lng:c,host_name:e.responses[hostField],event_name:r,event_desc:e.responses[descField],event_date:e.responses[dateField],event_time:e.responses[timeField],event_duration:e.responses[durationField],event_topic:e.responses[topicField],contact:e.responses[contactField]},statusDisplay("Queuing fallback results..."),batchResponses(u,p,20,n,s)}else statusDisplay(l+": Cannot map this event - < "+r+" >")}):statusDisplay(m+": Cannot map this event - < "+r+" >")}),new Promise(function(e){setTimeout(e,1e3)})})})}function batchResponses(e,t,a,n,s){onBatch<n?(dataArray.push(e),responsesArray.push(t),dataArray.length===a&&(statusDisplay("<b>SAVING "+a+" results...</b>"),populateSQLTable(dataArray,responsesArray),dataArray=[],responsesArray=[],onBatch++)):(dataArray.push(e),responsesArray.push(t),dataArray.length===s&&(statusDisplay("<b>SAVING "+s+" results...</b>"),populateSQLTable(dataArray,responsesArray),dataArray=[],responsesArray=[],onBatch=0))}function populateSQLTable(e,t){let a=t.length;jQuery.ajax({type:"post",dataType:"json",url:iip_map_params.ajax_url,data:{action:"map_ajax",data:e,security:iip_map_params.geocode_nonce},statusCode:{200:function(){statusDisplay("Status 200: <b>"+e.length+" events successfully saved</b>: < "+e.map(e=>e.event_name).join(", ")+" >"),statusDisplay("Updating Screendoor statuses..."),updateScreendoorStatus(t,a)}},error:function(t){statusDisplay("Status: <b>Error "+t.status+"</b> - "+t.statusText+". Could not save. "+e.length+" events: < "+e.map(e=>e.event_name).join(", ")+" >")}})}function updateScreendoorStatus(e,t){let a=iip_map_params.complete_status,n=0,s=0;e.forEach(function(e){let o=screendoorEndpoint+"/responses/"+e+"?"+screendoorKey;jQuery.ajax({type:"put",dataType:"json",url:o,data:{status:a},statusCode:{200:function(){n++,++s===t&&(reportStatusResults(n,a),s=0)}},error:function(o){statusDisplay("<b>ERROR "+o.status+"</b> - "+o.statusText+". Could not update Screendoor status for response #"+e),++s===t&&(reportStatusResults(n,a),s=0)}})})}function reportStatusResults(e,t){statusDisplay("Successfully updated "+e+" Screendoor responses to status < "+t+" >")}function statusDisplay(e){if("string"!=typeof e)throw new Error("statusDisplay(): argument must be a string");$("#geocoder-return").append(e+"<br />")}geocodeBtn.addEventListener("click",getScreendoorData);let screendoorEndpoint="https://screendoor.dobt.co/api/projects/"+iip_map_params.screendoor_project;const screendoorKey="&v=0&api_key="+iip_map_params.screendoor_api_key,getFieldsBtn=document.getElementById("iip-map-get-fields");function getScreendoorMeta(){getScreendoorFields(),getStatuses()}function getScreendoorFields(){let e=screendoorEndpoint+"/form?"+screendoorKey,t=new XMLHttpRequest;t.open("GET",e),t.responseType="json",t.send(),t.onload=function(){let e=t.response;t.statusText;populateScreendoorFields(e.field_data)}}function populateScreendoorFields(e){let t=document.querySelectorAll(".map-admin-project-info-select"),a=[];a.push("<option>- Select -</option>"),e.forEach(function(e){a.push("<option id='"+e.id+"' value='"+e.id+"'>"+e.label+"</option>")});let n=a.join("");t.forEach(function(e){e.innerHTML+=n})}function getStatuses(){let e=screendoorEndpoint+"/statuses?"+screendoorKey,t=new XMLHttpRequest;t.open("GET",e),t.responseType="json",t.send(),t.onload=function(){let e=t.response;t.statusText;populateStatuses(e)}}function populateStatuses(e){let t=document.getElementById("iip-map-geocoder-trigger"),a=document.getElementById("iip-map-geocoder-complete"),n=[];n.push("<option>- Select -</option>"),e.forEach(function(e){n.push("<option id='"+e.name+"' value='"+e.name+"'>"+e.name+"</option>")});let s=n.join("");t.innerHTML+=s,a.innerHTML+=s}getFieldsBtn.addEventListener("click",getScreendoorMeta);const getMarkerBtn=document.getElementById("iip-map-find-event");getMarkerBtn.addEventListener("click",getMarkerData);const updateMarkerBtn=document.getElementById("iip-map-update-marker");updateMarkerBtn.addEventListener("click",updateMarker);const deleteMarkerBtn=document.getElementById("iip-map-delete-marker");deleteMarkerBtn.addEventListener("click",deleteMarker);const hiddenDiv=document.querySelector(".map-admin-hidden"),eventIdInput=document.getElementById("iip-map-event-id"),eventIdSpinner=document.getElementById("map-update-marker-spinner"),eventName=document.getElementById("iip-map-event-name"),eventLat=document.getElementById("iip-map-event-lat"),eventLng=document.getElementById("iip-map-event-lng");let eventNonce=iip_map_params.update_nonce;function getMarkerData(){let e=document.getElementById("iip-map-event-id").value;activateSpinner(),statusDisplay("Fetching data for event #"+e+"...");let t={action:"get_marker_ajax",id:e,security:eventNonce};jQuery.ajax({type:"post",url:iip_map_params.ajax_url,data:t,success:function(t){populateMarkerData(JSON.parse(t)),restoreEventInput(),hiddenDiv.style.display="block",statusDisplay("Successfully fetched data for event #"+e)},error:function(e,t,a){statusDisplay("Failed to fetch data due to "+t+"! \n"+a),restoreEventInput()}})}function updateMarker(){let e=document.getElementById("iip-map-event-id").value;activateSpinner(),statusDisplay("Updating data for event #"+e+"...");let t={action:"update_marker_ajax",id:e,security:eventNonce};jQuery.ajax({type:"post",url:iip_map_params.ajax_url,data:t,success:function(t){statusDisplay("Successfully update marker #"+e),restoreEventInput(),hiddenDiv.style.display="none"},error:function(e,t,a){statusDisplay("Failed due to "+t+"! \n"+a),restoreEventInput()}})}function deleteMarker(){let e=document.getElementById("iip-map-event-id").value;activateSpinner(),statusDisplay("Deleting event #"+e+"...");let t={action:"delete_marker_ajax",id:e,security:eventNonce};jQuery.ajax({type:"post",url:iip_map_params.ajax_url,data:t,success:function(t){statusDisplay("Successfully deleted marker #"+e),restoreEventInput(),hiddenDiv.style.display="none"},error:function(e,t,a){statusDisplay("Failed due to "+t+"! \n"+a),restoreEventInput()}})}function populateMarkerData(e){eventName.value=e[0].event_name,eventLat.value=e[0].lat,eventLng.value=e[0].lng,eventName.innerHTML=eventName.value,eventLat.innerHTML=eventLat.value,eventLng.innerHTML=eventLng.value}function activateSpinner(){eventIdInput.style.display="none",eventIdSpinner.style.display="block"}function restoreEventInput(){eventIdInput.style.display="block",eventIdSpinner.style.display="none"}